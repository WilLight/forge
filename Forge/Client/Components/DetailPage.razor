@if (IsLoading)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (IsCreating == false)
    {
        <h1>Editing @Title.ToLower()</h1>
    }
    else
    {
        <h1>Creating @Title.ToLower()</h1>
    }

    <div class="overview-action-bar" style="margin-top: 10px">
        @if (IsDeleted)
        {
            <button class="btn btn-outline-primary overview-action-btn" @onclick="Restore">Restore</button>
        }
        else
        {
            <button class="btn btn-outline-primary overview-action-btn" @onclick="Save">Save</button>
            @if (IsCreating == false)
            {
                <button class="btn btn-outline-danger overview-action-btn" @onclick="Delete">Delete</button>
            }
        }
        
        @if (Actions != null)
        {
            @Actions
        }
    </div>
    <div style="margin-top: 10px">@Body</div>
}

@code {
    [Parameter]
    public string Title { get; set; } = "Model";

    [Parameter]
    public bool IsLoading { get; set; }
    [Parameter]
    public bool IsCreating { get; set; }
    [Parameter]
    public bool IsDeleted { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnSave { get; set; }
    [Parameter]
    public EventCallback<MouseEventArgs> OnDelete { get; set; }
    [Parameter]
    public EventCallback<MouseEventArgs> OnRestore { get; set; }

    [Parameter]
    public RenderFragment Actions { get; set; }
    [Parameter]
    public RenderFragment Body { get; set; }

    private async void Save(MouseEventArgs e)
    {
        await OnSave.InvokeAsync(e);
    }

    private async void Delete(MouseEventArgs e)
    {
        await OnDelete.InvokeAsync(e);
    }

    private async void Restore(MouseEventArgs e)
    {
        await OnRestore.InvokeAsync(e);
    }
}
